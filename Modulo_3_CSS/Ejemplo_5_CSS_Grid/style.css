/* CSS Grid Básico con media queries */
[class^="grid-child"] {
    background-color: coral;
    display: flex;
    justify-content: center;
    align-items: center;
}

.grid-parent {
    display: grid;

    
    /*Otra forma de hacer el @media dentro del parent con auto-fit*/
    /*grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); 
                                auto-fit va a generar tantas columnas como pueda. 
                                o es 160 o que lo reparta equitativamente, y va redistribuyendo 
                                lo usariamos para sustituir el @media*/
    
    grid-template-columns: 1fr 2fr 1fr; 
    grid-template-rows: 1fr 2fr;
    gap: 10px;
}

@media only screen and (max-width: 920px) {
    .grid-parent{
        grid-template-columns: 1fr 2fr;
    }
}

@media only screen and (max-width: 768px) {
    .grid-parent {
        grid-template-columns: 1fr;
    }
} 

/* CSS Grid por líneas */
.grid-parent-2 {
    display: grid;

    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4. 1fr);
    gap: 10px;
}

.grid-parent-2 > .grid-child-1 {
    grid-column: 1 / 3; /*de la linea 1 a la 3*/
    grid-row: 1; /*equivalente a grid-row:1 / 2*/
}

.grid-parent-2 > .grid-child-2 {
    grid-column: 3 ; 
    grid-row: 1 / 3; 
}

.grid-parent-2 > .grid-child-3 {
    grid-column: 1 / 3 ; 
    grid-row: 2 / 5; 

    opacity: 0.5;
    z-index: -1; /*para dejarlo por detras de box 6 y 5*/
}

.grid-parent-2 > .grid-child-4 {
    grid-column: 3 ; 
    grid-row: 3; 
}

.grid-parent-2 > .grid-child-5 {
    grid-column: 2 / 4 ; 
    grid-row: 4; 
}

.grid-parent-2 > .grid-child-6 {
    grid-column: 1; 
    grid-row: 2; 
}

/* CSS Grid por áreas */

.grid-parent-3 {
    display: grid;
    gap: 10px;

    grid-template-columns: 150px 1fr 1fr; /*para dar tamaño a las columnas*/
    grid-template-rows: 1fr 4fr 1fr; /*para dar tamaño a las filas*/

    /*dibujamos el área*/
    grid-template-areas: "nav nav ."
                         "content1 content2 content3"
                         "footer footer footer";
                        /*si queremos dejar vacio una caja, ponemos un punto*/
}

.grid-parent-3 > .grid-child-1 {
    grid-area: nav;
}

.grid-parent-3 > .grid-child-2 {
    grid-area: content1;
}

.grid-parent-3 > .grid-child-3 {
    grid-area: content2;
}

.grid-parent-3 > .grid-child-4 {
    grid-area: content3;
}

.grid-parent-3 > .grid-child-5 {
    grid-area: footer;
}



